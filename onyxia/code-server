# Stage 1: Build stage
FROM ubuntu:22.04 AS builder

ARG KUBECTL_VERSION=v1.30.1
ARG SOPS_VERSION=v3.9.0
ARG TF_VERSION=1.9.5
ARG PACKER_VERSION=1.11.1
ARG YQ_VERSION=v4.44.3
ARG TSH_VERSION=v16.4.7

RUN apt-get update && DEBIAN_FRONTEND=noninteractive apt-get install -y \
    curl \
    unzip \
    jq \
    tar \
    sudo

# Install Helm
RUN curl https://raw.githubusercontent.com/helm/helm/main/scripts/get-helm-3 | bash

# Install kubectl
RUN curl -Lo /kubectl https://dl.k8s.io/release/${KUBECTL_VERSION}/bin/linux/amd64/kubectl && \
    chmod +x /kubectl

# Install SOPS
RUN curl -LO https://github.com/getsops/sops/releases/download/${SOPS_VERSION}/sops-${SOPS_VERSION}.linux.amd64 && \
    chmod +x sops-${SOPS_VERSION}.linux.amd64 && \
    mv sops-${SOPS_VERSION}.linux.amd64 /sops

# Install Terraform
RUN curl -LO https://releases.hashicorp.com/terraform/${TF_VERSION}/terraform_${TF_VERSION}_linux_amd64.zip && \
    unzip terraform_${TF_VERSION}_linux_amd64.zip -d / && \
    chmod +x /terraform

# Install Packer
RUN curl -LO https://releases.hashicorp.com/packer/${PACKER_VERSION}/packer_${PACKER_VERSION}_linux_amd64.zip && \
    unzip -o packer_${PACKER_VERSION}_linux_amd64.zip -d / && \
    chmod +x /packer

# Install yq
RUN curl -LO https://github.com/mikefarah/yq/releases/download/${YQ_VERSION}/yq_linux_amd64.tar.gz && \
    tar -xzf yq_linux_amd64.tar.gz && \
    mv yq_linux_amd64 /yq && \
    chmod +x /yq

# Install Teleport tsh
RUN curl -O https://cdn.teleport.dev/teleport-${TSH_VERSION}-linux-amd64-bin.tar.gz && \
    tar -xzf teleport-${TSH_VERSION}-linux-amd64-bin.tar.gz && \
    mv teleport/tsh /tsh && \
    chmod +x /tsh

# Stage 2: Final image
FROM codercom/code-server:4.4.0

# Set environment variables
ARG KUBECTL_VERSION=v1.30.1
ARG SOPS_VERSION=v3.9.0
ARG TF_VERSION=1.9.5
ARG PACKER_VERSION=1.11.1
ARG YQ_VERSION=v4.44.3

USER coder

# Copy tools from builder
COPY --from=builder /usr/local/bin/helm /usr/local/bin/helm
COPY --from=builder /kubectl /usr/local/bin/kubectl
COPY --from=builder /sops /usr/local/bin/sops
COPY --from=builder /terraform /usr/local/bin/terraform
COPY --from=builder /packer /usr/local/bin/packer
COPY --from=builder /yq /usr/local/bin/yq
COPY --from=builder /tsh /usr/local/bin/tsh

# Copy settings
COPY files/vimrc.template /home/coder/.vimrc
COPY files/bash_aliases.template /home/coder/.bash_aliases
COPY files/requirements.txt /tmp/requirements.txt
COPY files/settings.json.template /home/coder/.local/share/code-server/User/settings.json
COPY custom-ca-bundle.crt /usr/local/share/ca-certificates/

# Install system packages
RUN sudo update-ca-certificates && \
    sudo apt update && sudo DEBIAN_FRONTEND=noninteractive apt install -y \
    tzdata \
    ssh \
    vim \
    git \
    curl \
    nmap \
    netcat \
    dnsutils \
    build-essential \
    python3-dev \
    libyaml-dev \
    python3-pip \
    s3cmd \
    jq \
    plocate \
    tree \
    proxytunnel && \
    sudo rm -rf /var/lib/apt/lists/* && \
    sudo updatedb

# Install Python packages globally
RUN sudo pip3 install --no-cache-dir -r /tmp/requirements.txt && \
    sudo rm -rf /root/.cache/pip

# Remove build tools to shrink image
RUN sudo apt purge -y build-essential python3-dev libyaml-dev && \
    sudo apt autoremove -y && sudo apt clean

# Install Ansible collections
RUN ansible-galaxy collection install community.general kubernetes.core ansible.utils

# Clean up and set permissions
RUN sudo rm -rf /tmp/*

CMD ["/bin/bash"]
